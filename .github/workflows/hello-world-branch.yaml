name: hello-world-branch

on:
  pull_request:
    branches:
      - master
    paths:
      - hello-world/**
      - .github/workflows/hello-world-branch.yaml

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Platform repo
        uses: actions/checkout@v2
        with:
          path: futurenhs-platform
      - name: "Login to docker"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: "Build & Push image"
        working-directory: futurenhs-platform/hello-world
        run: |
          TAG="$(git rev-parse --short=7 ${{ github.sha }})"
          make docker-build tag=${TAG}
          make docker-push tag=${TAG}
          DIGEST="$(docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.REGISTRY_LOGIN_SERVER }}/hello-world:${TAG})"
          echo ::set-env name=TAG::$TAG
          echo ::set-env name=DIGEST::$DIGEST
      - name: Clone Deployments repo
        uses: actions/checkout@v2
        with:
          repository: FutureNHS/futurenhs-deployments
          ref: ${{ env.DEPLOYMENTS_BRANCH }}
          path: futurenhs-deployments
          ssh-key: ${{ secrets.DEPLOY_KEY }}
      - name: Checkout the correct Deployments repo branch
        working-directory: futurenhs-deployments
        run: |
          set -eux
          git config --local user.email "futurenhs-devs@red-badger.com"
          git config --local user.name "FutureNHS CI/CD"
          if git fetch --unshallow origin pr-$GITHUB_HEAD_REF master ; then
            git checkout origin/pr-$GITHUB_HEAD_REF -b pr-$GITHUB_HEAD_REF
            git merge origin/master --strategy=recursive --strategy-option=ours
          else
            git checkout HEAD -b pr-$GITHUB_HEAD_REF
          fi
      - name: Update image tag and test dev overlay creation
        run: |
          cd $HOME
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          # it might actually be possible to kustomize the production version
          # and let the other overlays pick up the change.
          # TODO: would be nice if the deployments repo followed the same structure
          # as the platform repo, but only contained manifests.
          cd $GITHUB_WORKSPACE/futurenhs-platform/hello-world/manifests/dev-template
          $HOME/kustomize edit set image $DIGEST
          $GITHUB_WORKSPACE/futurenhs-platform/infrastructure/scripts/create-dev-overlays.py
      - name: Copy manifests
        run: |
          set -eux
          $GITHUB_WORKSPACE/futurenhs-platform/infrastructure/scripts/create-dev-overlays.py
          mkdir -p $GITHUB_WORKSPACE/futurenhs-deployments/hello-world
          cp -r $GITHUB_WORKSPACE/futurenhs-platform/hello-world/manifests/* $GITHUB_WORKSPACE/futurenhs-deployments/hello-world
      - name: Deploy
        working-directory: futurenhs-deployments
        run: |
          set -eux

          git add -A
          # TODO: can we make this commit message reflect the message at the tip of the platform repo?
          git diff-index --quiet HEAD || git commit -am "CI: Update dev image for ${TAG}"

          declare -i n
          n=0
          until [ $n -ge 5 ]
          do
            git push origin "HEAD:pr-$GITHUB_HEAD_REF" && break
            n+=1
            git fetch origin pr-$GITHUB_HEAD_REF
            git merge origin/pr-$GITHUB_HEAD_REF --strategy=recursive --strategy-option=ours
          done

          if [ $n -ge 5 ]
          then
            echo "ran out of retries"
            exit 1
          fi
